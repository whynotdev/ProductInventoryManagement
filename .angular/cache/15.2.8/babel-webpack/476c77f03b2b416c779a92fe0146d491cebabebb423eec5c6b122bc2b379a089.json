{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../core/data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateProductComponent_div_7_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Product name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_7_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Name must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_7_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵtemplate(2, UpdateProductComponent_div_7_small_2_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.updateProductForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction UpdateProductComponent_div_12_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Description is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_12_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.updateProductForm.get(\"description\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction UpdateProductComponent_div_17_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Manufacturer is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_17_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.updateProductForm.get(\"manufacturer\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction UpdateProductComponent_div_22_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Price is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_22_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Price cannot be negative.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_22_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵtemplate(2, UpdateProductComponent_div_22_small_2_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.updateProductForm.get(\"price\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.updateProductForm.get(\"price\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"min\"]);\n  }\n}\nfunction UpdateProductComponent_div_27_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Quantity is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_27_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Quantity must be at least 1.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_27_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵtemplate(2, UpdateProductComponent_div_27_small_2_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.updateProductForm.get(\"quantity\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r4.updateProductForm.get(\"quantity\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"min\"]);\n  }\n}\nexport class UpdateProductComponent {\n  constructor(route, dataService, fb, router) {\n    this.route = route;\n    this.dataService = dataService;\n    this.fb = fb;\n    this.router = router;\n    this.productId = null;\n    this.updateProductForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(0)]],\n      quantity: [1, [Validators.required, Validators.min(1)]]\n    });\n  }\n  ngOnInit() {\n    // Get product ID from route params\n    this.productId = Number(this.route.snapshot.paramMap.get('id'));\n    if (this.productId) {\n      // Load product data from service\n      console.log(this.productId, typeof this.productId);\n      this.dataService.getProductById(this.productId).subscribe(product => {\n        if (product) {\n          // Populate the form with product data\n          this.updateProductForm.patchValue(product);\n        } else {\n          alert('Product not found.');\n          this.router.navigate(['/inventory']);\n        }\n      }, error => {\n        console.error('Error loading product:', error);\n        alert('An error occurred while loading the product.');\n        this.router.navigate(['/inventory']);\n      });\n    }\n  }\n  onUpdate() {\n    if (this.updateProductForm.valid && this.productId !== null) {\n      // Update product data\n      const updatedProduct = {\n        id: this.productId,\n        ...this.updateProductForm.value\n      };\n      this.dataService.updateProduct(updatedProduct).subscribe(() => {\n        alert('Product updated successfully!');\n        this.router.navigate(['/inventory']);\n      }, error => {\n        console.error('Error updating product:', error);\n        alert('An error occurred while updating the product.');\n      });\n    } else {\n      alert('Please correct the errors in the form.');\n    }\n  }\n}\nUpdateProductComponent.ɵfac = function UpdateProductComponent_Factory(t) {\n  return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n};\nUpdateProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateProductComponent,\n  selectors: [[\"app-update-product\"]],\n  decls: 30,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"description\"], [\"type\", \"text\", \"formControlName\", \"manufacturer\"], [\"type\", \"number\", \"formControlName\", \"price\"], [\"type\", \"number\", \"formControlName\", \"quantity\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function UpdateProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Update Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateProductComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onUpdate();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 1);\n      i0.ɵɵtemplate(7, UpdateProductComponent_div_7_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 3);\n      i0.ɵɵtemplate(12, UpdateProductComponent_div_12_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\");\n      i0.ɵɵtext(15, \"Manufacturer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 4);\n      i0.ɵɵtemplate(17, UpdateProductComponent_div_17_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"label\");\n      i0.ɵɵtext(20, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 5);\n      i0.ɵɵtemplate(22, UpdateProductComponent_div_22_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\")(24, \"label\");\n      i0.ɵɵtext(25, \"Quantity:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 6);\n      i0.ɵɵtemplate(27, UpdateProductComponent_div_27_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 7);\n      i0.ɵɵtext(29, \"Update Product\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateProductForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.updateProductForm.get(\"description\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.updateProductForm.get(\"description\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.updateProductForm.get(\"manufacturer\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.updateProductForm.get(\"manufacturer\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.updateProductForm.get(\"price\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.updateProductForm.get(\"price\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.updateProductForm.get(\"quantity\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.updateProductForm.get(\"quantity\")) == null ? null : tmp_5_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.updateProductForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICGvDC,6BAAmE;IAAAA,yCAAyB;IAAAA,iBAAQ;;;;;IACpGA,6BAAoE;IAAAA,wDAC3D;IAAAA,iBAAQ;;;;;IAHrBA,2BAA8F;IAC1FA,iFAAoG;IACpGA,iFACiB;IACrBA,iBAAM;;;;;;IAHMA,eAAyD;IAAzDA,mJAAyD;IACzDA,eAA0D;IAA1DA,oJAA0D;;;;;IAQlEA,6BAA0E;IAAAA,wCAAwB;IAAAA,iBAAQ;;;;;IAD9GA,2BAA4G;IACxGA,kFAA0G;IAC9GA,iBAAM;;;;;IADMA,eAAgE;IAAhEA,0JAAgE;;;;;IAOxEA,6BAA2E;IAAAA,yCAAyB;IAAAA,iBAAQ;;;;;IADhHA,2BAA8G;IAC1GA,kFAA4G;IAChHA,iBAAM;;;;;IADMA,eAAiE;IAAjEA,2JAAiE;;;;;IAOzEA,6BAAoE;IAAAA,kCAAkB;IAAAA,iBAAQ;;;;;IAC9FA,6BAA+D;IAAAA,yCAAyB;IAAAA,iBAAQ;;;;;IAFpGA,2BAAgG;IAC5FA,kFAA8F;IAC9FA,kFAAgG;IACpGA,iBAAM;;;;;;IAFMA,eAA0D;IAA1DA,oJAA0D;IAC1DA,eAAqD;IAArDA,+IAAqD;;;;;IAO7DA,6BAAuE;IAAAA,qCAAqB;IAAAA,iBAAQ;;;;;IACpGA,6BAAkE;IAAAA,4CAA4B;IAAAA,iBAAQ;;;;;IAF1GA,2BAAsG;IAClGA,kFAAoG;IACpGA,kFAAsG;IAC1GA,iBAAM;;;;;;IAFMA,eAA6D;IAA7DA,uJAA6D;IAC7DA,eAAwD;IAAxDA,kJAAwD;;;AD5B5E,OAAM,MAAOC,sBAAsB;EAIjCC,YACUC,KAAqB,EACrBC,WAAwB,EACxBC,EAAe,EACfC,MAAc;IAHd,UAAK,GAALH,KAAK;IACL,gBAAW,GAAXC,WAAW;IACX,OAAE,GAAFC,EAAE;IACF,WAAM,GAANC,MAAM;IANhB,cAAS,GAAkB,IAAI;IAQ7B,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACrCC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DC,WAAW,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ,CAAC;MACtCG,YAAY,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACW,QAAQ,CAAC;MACvCI,KAAK,EAAE,CAAC,CAAC,EAAE,CAACf,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACgB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAACjB,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACgB,GAAG,CAAC,CAAC,CAAC,CAAC;KACvD,CAAC;EACJ;EAEAE,QAAQ;IACN;IACA,IAAI,CAACC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAChB,KAAK,CAACiB,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAE/D,IAAI,IAAI,CAACJ,SAAS,EAAE;MAClB;MACAK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,SAAS,EAAE,OAAO,IAAI,CAACA,SAAS,CAAC;MAElD,IAAI,CAACd,WAAW,CAACqB,cAAc,CAAC,IAAI,CAACP,SAAS,CAAC,CAACQ,SAAS,CACtDC,OAAO,IAAI;QACV,IAAIA,OAAO,EAAE;UACX;UACA,IAAI,CAACpB,iBAAiB,CAACqB,UAAU,CAACD,OAAO,CAAC;SAC3C,MAAM;UACLE,KAAK,CAAC,oBAAoB,CAAC;UAC3B,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;MAExC,CAAC,EACAC,KAAK,IAAI;QACRR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CF,KAAK,CAAC,8CAA8C,CAAC;QACrD,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC,CACF;;EAEL;EAEAE,QAAQ;IACN,IAAI,IAAI,CAACzB,iBAAiB,CAAC0B,KAAK,IAAI,IAAI,CAACf,SAAS,KAAK,IAAI,EAAE;MAC3D;MACA,MAAMgB,cAAc,GAAG;QAAEC,EAAE,EAAE,IAAI,CAACjB,SAAS;QAAE,GAAG,IAAI,CAACX,iBAAiB,CAAC6B;MAAK,CAAE;MAC9E,IAAI,CAAChC,WAAW,CAACiC,aAAa,CAACH,cAAc,CAAC,CAACR,SAAS,CACtD,MAAK;QACHG,KAAK,CAAC,+BAA+B,CAAC;QACtC,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC,EACAC,KAAK,IAAI;QACRR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CF,KAAK,CAAC,+CAA+C,CAAC;MACxD,CAAC,CACF;KACF,MAAM;MACLA,KAAK,CAAC,wCAAwC,CAAC;;EAEnD;;AA/DW5B,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAqC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVnC1C,0BAAI;MAAAA,8BAAc;MAAAA,iBAAK;MACvBA,+BAA8D;MAAxBA;QAAA,OAAY2C,cAAU;MAAA,EAAC;MACzD3C,2BAAK;MACMA,qBAAK;MAAAA,iBAAQ;MACpBA,2BAA4C;MAC5CA,uEAIM;MACVA,iBAAM;MACNA,2BAAK;MACMA,6BAAY;MAAAA,iBAAQ;MAC3BA,4BAAmD;MACnDA,yEAEM;MACVA,iBAAM;MACNA,4BAAK;MACMA,8BAAa;MAAAA,iBAAQ;MAC5BA,4BAAoD;MACpDA,yEAEM;MACVA,iBAAM;MACNA,4BAAK;MACMA,uBAAM;MAAAA,iBAAQ;MACrBA,4BAA+C;MAC/CA,yEAGM;MACVA,iBAAM;MACNA,4BAAK;MACMA,0BAAS;MAAAA,iBAAQ;MACxBA,4BAAkD;MAClDA,yEAGM;MACVA,iBAAM;MACNA,kCAA6D;MAAAA,+BAAc;MAAAA,iBAAS;;;;;;;;MAxClFA,eAA+B;MAA/BA,iDAA+B;MAIvBA,eAAsF;MAAtFA,2LAAsF;MAStFA,eAAoG;MAApGA,yMAAoG;MAOpGA,eAAsG;MAAtGA,2MAAsG;MAOtGA,eAAwF;MAAxFA,6LAAwF;MAQxFA,eAA8F;MAA9FA,mMAA8F;MAKlFA,eAAsC;MAAtCA,wDAAsC","names":["Validators","i0","UpdateProductComponent","constructor","route","dataService","fb","router","updateProductForm","group","name","required","minLength","description","manufacturer","price","min","quantity","ngOnInit","productId","Number","snapshot","paramMap","get","console","log","getProductById","subscribe","product","patchValue","alert","navigate","error","onUpdate","valid","updatedProduct","id","value","updateProduct","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\whyno\\Desktop\\Final2025\\ProductInventoryManagement\\src\\app\\features\\inventory\\update-product\\update-product.component.ts","C:\\Users\\whyno\\Desktop\\Final2025\\ProductInventoryManagement\\src\\app\\features\\inventory\\update-product\\update-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DataService } from '../../../core/data.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-update-product',\r\n  templateUrl: './update-product.component.html',\r\n  styleUrls: ['./update-product.component.css']\r\n})\r\nexport class UpdateProductComponent implements OnInit {\r\n  updateProductForm: FormGroup;\r\n  productId: number | null = null;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dataService: DataService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n    this.updateProductForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(3)]],\r\n      description: ['', Validators.required],\r\n      manufacturer: ['', Validators.required],\r\n      price: [0, [Validators.required, Validators.min(0)]],\r\n      quantity: [1, [Validators.required, Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Get product ID from route params\r\n    this.productId = Number(this.route.snapshot.paramMap.get('id'));\r\n\r\n    if (this.productId) {\r\n      // Load product data from service\r\n      console.log(this.productId, typeof this.productId);\r\n      \r\n      this.dataService.getProductById(this.productId).subscribe(\r\n        (product) => {\r\n          if (product) {\r\n            // Populate the form with product data\r\n            this.updateProductForm.patchValue(product);\r\n          } else {\r\n            alert('Product not found.');\r\n            this.router.navigate(['/inventory']);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error loading product:', error);\r\n          alert('An error occurred while loading the product.');\r\n          this.router.navigate(['/inventory']);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onUpdate(): void {\r\n    if (this.updateProductForm.valid && this.productId !== null) {\r\n      // Update product data\r\n      const updatedProduct = { id: this.productId, ...this.updateProductForm.value };\r\n      this.dataService.updateProduct(updatedProduct).subscribe(\r\n        () => {\r\n          alert('Product updated successfully!');\r\n          this.router.navigate(['/inventory']);\r\n        },\r\n        (error) => {\r\n          console.error('Error updating product:', error);\r\n          alert('An error occurred while updating the product.');\r\n        }\r\n      );\r\n    } else {\r\n      alert('Please correct the errors in the form.');\r\n    }\r\n  }\r\n}\r\n","<h2>Update Product</h2>\r\n<form [formGroup]=\"updateProductForm\" (ngSubmit)=\"onUpdate()\">\r\n    <div>\r\n        <label>Name:</label>\r\n        <input type=\"text\" formControlName=\"name\" />\r\n        <div *ngIf=\"updateProductForm.get('name')?.invalid && updateProductForm.get('name')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('name')?.errors?.['required']\">Product name is required.</small>\r\n            <small *ngIf=\"updateProductForm.get('name')?.errors?.['minlength']\">Name must be at least 3 characters\r\n                long.</small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <label>Description:</label>\r\n        <input type=\"text\" formControlName=\"description\" />\r\n        <div *ngIf=\"updateProductForm.get('description')?.invalid && updateProductForm.get('description')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('description')?.errors?.['required']\">Description is required.</small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <label>Manufacturer:</label>\r\n        <input type=\"text\" formControlName=\"manufacturer\" />\r\n        <div *ngIf=\"updateProductForm.get('manufacturer')?.invalid && updateProductForm.get('manufacturer')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('manufacturer')?.errors?.['required']\">Manufacturer is required.</small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <label>Price:</label>\r\n        <input type=\"number\" formControlName=\"price\" />\r\n        <div *ngIf=\"updateProductForm.get('price')?.invalid && updateProductForm.get('price')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('price')?.errors?.['required']\">Price is required.</small>\r\n            <small *ngIf=\"updateProductForm.get('price')?.errors?.['min']\">Price cannot be negative.</small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <label>Quantity:</label>\r\n        <input type=\"number\" formControlName=\"quantity\" />\r\n        <div *ngIf=\"updateProductForm.get('quantity')?.invalid && updateProductForm.get('quantity')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('quantity')?.errors?.['required']\">Quantity is required.</small>\r\n            <small *ngIf=\"updateProductForm.get('quantity')?.errors?.['min']\">Quantity must be at least 1.</small>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" [disabled]=\"updateProductForm.invalid\">Update Product</button>\r\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}